name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos-latest
          - ubuntu-22.04
          - windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r src-tauri/requirements.txt

      - name: Install dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev \
            pkg-config

      - name: Install dependencies (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install node
          brew install rust
          brew install webkitgtk
          brew install libsoup
          brew install python@3.10

      - name: Install dependencies (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          choco install nodejs
          choco install rust
          choco install python

      - name: Install frontend dependencies
        run: bun install

      - name: Build frontend
        run: bun run build

      - name: Build Tauri app
        run: bun run tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ github.ref_name }}
          path: |
            src-tauri/target/release/bundle/
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/macos-latest-*/**/*.dmg
            artifacts/macos-latest-*/**/*.app.tar.gz
            artifacts/ubuntu-22.04-*/**/*.AppImage
            artifacts/ubuntu-22.04-*/**/*.deb
            artifacts/windows-latest-*/**/*.msi
            artifacts/windows-latest-*/**/*.exe
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 